{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hjayb\\\\OneDrive\\\\Desktop\\\\MyClass\\\\Fall2024\\\\InPersonClassess\\\\CMSC355_FundamentalsSoftwareEngineer\\\\Sprint2\\\\healthcare_app\\\\src\\\\Login_Register\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-Za-z][Aa-zA-zz0-9-_]{3,23}$/; /*This regular expression ensures that the username must start with a letter (either uppercase or lowercase), followed by 3 to 23 characters that can be letters, numbers, hyphens, or underscores.*/\n\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/; /*This line defines a regular expression that requires a password to be between 8 and 24 characters long and include at least one lowercase letter, one uppercase letter, one digit, and one special character (!@#$%). */\n\nconst Register = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(flase);\n  const [userFocus, setUserFocus] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const [validpwd, setValidPwd] = useState(flase);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(flase);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef, current.focus();\n  }, []);\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, matchPwd]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      ref: errRef,\n      className: errMsg ? \"errmsg\" : \"offscreen\",\n      \"aria-live\": \"assertive\",\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"W5kPtbfpd5sSnASTVtCW1KQtjaI=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","USER_REGEX","PWD_REGEX","Register","_s","userRef","errRef","user","setUser","validName","setValidName","flase","userFocus","setUserFocus","pwd","setPwd","validpwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","result","test","console","log","match","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hjayb/OneDrive/Desktop/MyClass/Fall2024/InPersonClassess/CMSC355_FundamentalsSoftwareEngineer/Sprint2/healthcare_app/src/Login_Register/Register.js"],"sourcesContent":["import React from 'react'\r\nimport {useRef, useState, useEffect} from \"react\";\r\n\r\nconst USER_REGEX = /^[A-Za-z][Aa-zA-zz0-9-_]{3,23}$/; /*This regular expression ensures that the username must start with a letter (either uppercase or lowercase), followed by 3 to 23 characters that can be letters, numbers, hyphens, or underscores.*/\r\n\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/; /*This line defines a regular expression that requires a password to be between 8 and 24 characters long and include at least one lowercase letter, one uppercase letter, one digit, and one special character (!@#$%). */\r\n\r\n\r\nconst Register = () => {\r\n  const userRef = useRef();\r\n  const errRef = useRef();\r\n\r\n  const [user , setUser] = useState('');\r\n  const [validName, setValidName] = useState(flase);\r\n  const [userFocus, setUserFocus] = useState (false);\r\n\r\n  const [pwd , setPwd] = useState('');\r\n  const [validpwd, setValidPwd] = useState(flase);\r\n  const [pwdFocus, setPwdFocus] = useState (false);\r\n\r\n  const [matchPwd , setMatchPwd] = useState('');\r\n  const [validMatch, setValidMatch] = useState(flase);\r\n  const [matchFocus, setMatchFocus] = useState (false);\r\n\r\n  const [errMsg,setErrMsg] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    userRef,current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const result = USER_REGEX.test(user);\r\n    console.log(result);\r\n    console.log(user);\r\n    setValidName(result);\r\n  }, [user])\r\n\r\n\r\n  useEffect(() => {\r\n    const result = PWD_REGEX.test(pwd);\r\n    console.log(result);\r\n    console.log(pwd);\r\n    setValidPwd(result);\r\n    const match = pwd === matchPwd;\r\n    setValidMatch(match);\r\n  }, [pwd, matchPwd])\r\n\r\n\r\n  useEffect(() => {\r\n    setErrMsg('');\r\n  }, [user, pwd, matchPwd])\r\n\r\n\r\n  return (\r\n    <section>\r\n      <p ref= {errRef} className= {errMsg ? \"errmsg\": \"offscreen\"} aria-live='assertive'>{errMsg}</p>\r\n\r\n      \r\n\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Register"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}