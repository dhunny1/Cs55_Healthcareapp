{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hjayb\\\\OneDrive\\\\Desktop\\\\MyClass\\\\Fall2024\\\\InPersonClassess\\\\CMSC355_FundamentalsSoftwareEngineer\\\\Sprint2\\\\healthcare_app\\\\src\\\\Login_Register\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useRef, useState, useEffect } from \"react\";\nimport { openDB } from 'idb';\nimport { registerUser } from '../API/db.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-Za-z][A-Za-z0-9-_]{3,23}$/; /*This regular expression ensures that the username must start with a letter (either uppercase or lowercase), followed by 3 to 23 characters that can be letters, numbers, hyphens, or underscores.*/\n\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/; /*This line defines a regular expression that requires a password to be between 8 and 24 characters long and include at least one lowercase letter, one uppercase letter, one digit, and one special character (!@#$%). */\n\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const userRef = useRef();\n  const errRef = useRef();\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd;\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, matchPwd]);\n\n  // const handelSubmit = async (e) => {\n  //   e.preventDefault();\n  //   //if button enabled with js hack\n  //   const v1 = USER_REGEX.test(user);\n  //   const v2 = PWD_REGEX.test(pwd);\n  //   if(!v1 || !v2 || !validMatch) {\n  //     setErrMsg(\"Invalid Entry\");\n  //     return;\n  //   }\n  //   console.log(user, pwd);\n  //   setSuccess(true);\n  // }\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n\n  //   // Validate user and password using regex\n  //   const v1 = USER_REGEX.test(user);\n  //   const v2 = PWD_REGEX.test(pwd);\n  //   if (!v1 || !v2 || !validMatch) {\n  //     setErrMsg(\"Invalid Entry\");\n  //     return;\n  //   }\n\n  //   // Store user data in IndexedDB\n  //   await registerUser(user, pwd);\n  //   console.log(\"User registered:\", user);\n\n  //   // Clear input fields and show success message\n  //   setUser('');\n  //   setPwd('');\n  //   setMatchPwd('');\n  //   setSuccess(true);\n  // };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Form submitted');\n\n    // Validate inputs\n    const isUsernameValid = USER_REGEX.test(user);\n    const isPasswordValid = PWD_REGEX.test(pwd);\n    console.log(\"Username valid:\", isUsernameValid);\n    console.log(\"Password valid:\", isPasswordValid);\n    console.log(\"Password match valid:\", validMatch);\n    if (!isUsernameValid || !isPasswordValid || !validMatch) {\n      setErrMsg(\"Invalid Entry\");\n      console.log(\"Form validation failed\");\n      return;\n    }\n    try {\n      console.log(\"Calling registerUser...\");\n      await registerUser(user, pwd);\n      console.log(\"User registered successfully!\");\n      setUser('');\n      setPwd('');\n      setMatchPwd('');\n      setSuccess(true);\n\n      // Redirect to the home page after successful registration\n      navigate('/home');\n    } catch (error) {\n      console.error(\"Error during registration:\", error);\n      if (error.name === \"ConstraintError\") {\n        setErrMsg(\"Username already exists. Please choose a different one.\");\n      } else {\n        setErrMsg(\"An error occurred during registration. Please try again later.\");\n      }\n    }\n  };\n\n  // // Registration function to store user data in IndexedDB\n  // async function registerUser(username, password) {\n  //   const dbPromise = openDB.open('myDatabase', 1, (upgradeDb) => {\n  //     const objectStore = upgradeDb.createObjectStore('users', { keyPath: 'username' });\n  //     objectStore.createIndex('username', 'username', { unique: true });\n  //   });\n\n  //   await dbPromise.then(db => {\n  //     const tx = db.transaction('users', 'readwrite');\n  //     const store = tx.objectStore('users');\n  //     store.add({ username, password });\n  //     return tx.complete;\n  //   });\n  // }\n  // Registration function to store user data in IndexedDB\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:3000/home\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(\"icon\", {\n              \"aria-label\": \"Checkmark icon\",\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName || !user ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(\"icon\", {\n              \"aria-label\": \"Invalid icon\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef,\n          autoComplete: \"off\",\n          onChange: e => setUser(e.target.value),\n          required: true,\n          \"aria-invalid\": validName ? \"false\" : \"true\",\n          \"aria-describedby\": \"uidnote\",\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uidnote\",\n          className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(\"icon\", {\n            children: \"Icon here \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 35\n          }, this), \"4 to 24 characters. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 31\n          }, this), \"Must begin with a letter. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 37\n          }, this), \"Letters, numbers, underscores, hyphesn allowed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validPwd ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(\"icon\", {\n              \"aria-label\": \"Checkmark icon\",\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validPwd || !pwd ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(\"icon\", {\n              \"ria-label\": \"Invalid icon\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          required: true,\n          \"aria-invalid\": validPwd ? \"false\" : \"true\",\n          \"aria-describedby\": \"pwdnote\",\n          onFocus: () => setPwdFocus(true),\n          onBlur: () => setPwdFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(\"icon\", {\n            children: \"Icon here \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 35\n          }, this), \"8 to 24 characters. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 33\n          }, this), \"Must include uppercase and lowercase letters, a number and a special character. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 93\n          }, this), \"Allowed special characters: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"exclamation mark\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"at symbol\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 86\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"hashtag\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 123\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"dollar sign\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 158\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"percent\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 197\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_pwd\",\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validMatch && matchPwd ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(\"icon\", {\n              \"aria-label\": \"Checkmark icon\",\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validMatch || !matchPwd ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(\"icon\", {\n              \"ria-label\": \"Invalid icon\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_pwd\",\n          onChange: e => setMatchPwd(e.target.value),\n          required: true,\n          \"aria-invalid\": validMatch ? \"false\" : \"true\",\n          \"aria-describedby\": \"confirmnote\",\n          onFocus: () => setMatchFocus(true),\n          onBlur: () => setMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"confirmnote\",\n          className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(\"icon\", {\n            children: \"icone here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), \"Must match the first password input field.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validName || !validPwd || !validMatch ? true : false,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:3000/\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"86xyeaLh25zMwpRrXlE23oj+d9w=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useRef","useState","useEffect","openDB","registerUser","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","USER_REGEX","PWD_REGEX","Register","_s","navigate","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","result","test","console","log","match","handleSubmit","e","preventDefault","isUsernameValid","isPasswordValid","error","name","children","fileName","_jsxFileName","lineNumber","columnNumber","href","ref","className","onSubmit","htmlFor","type","id","autoComplete","onChange","target","value","required","onFocus","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Hjayb/OneDrive/Desktop/MyClass/Fall2024/InPersonClassess/CMSC355_FundamentalsSoftwareEngineer/Sprint2/healthcare_app/src/Login_Register/Register.js"],"sourcesContent":["import React from 'react'\r\nimport {useRef, useState, useEffect} from \"react\";\r\nimport { openDB } from 'idb';\r\nimport { registerUser } from '../API/db.js';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst USER_REGEX = /^[A-Za-z][A-Za-z0-9-_]{3,23}$/; /*This regular expression ensures that the username must start with a letter (either uppercase or lowercase), followed by 3 to 23 characters that can be letters, numbers, hyphens, or underscores.*/\r\n\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/; /*This line defines a regular expression that requires a password to be between 8 and 24 characters long and include at least one lowercase letter, one uppercase letter, one digit, and one special character (!@#$%). */\r\n\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const userRef = useRef();\r\n  const errRef = useRef();\r\n\r\n  const [user , setUser] = useState('');\r\n  const [validName, setValidName] = useState(false);\r\n  const [userFocus, setUserFocus] = useState (false);\r\n\r\n  const [pwd , setPwd] = useState('');\r\n  const [validPwd, setValidPwd] = useState(false);\r\n  const [pwdFocus, setPwdFocus] = useState (false);\r\n\r\n  const [matchPwd , setMatchPwd] = useState('');\r\n  const [validMatch, setValidMatch] = useState(false);\r\n  const [matchFocus, setMatchFocus] = useState (false);\r\n\r\n  const [errMsg,setErrMsg] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    userRef.current.focus();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const result = USER_REGEX.test(user);\r\n    console.log(result);\r\n    console.log(user);\r\n    setValidName(result);\r\n  }, [user])\r\n\r\n\r\n  useEffect(() => {\r\n    const result = PWD_REGEX.test(pwd);\r\n    console.log(result);\r\n    console.log(pwd);\r\n    setValidPwd(result);\r\n    const match = pwd === matchPwd;\r\n    setValidMatch(match);\r\n  }, [pwd, matchPwd])\r\n\r\n\r\n  useEffect(() => {\r\n    setErrMsg('');\r\n  }, [user, pwd, matchPwd])\r\n\r\n  // const handelSubmit = async (e) => {\r\n  //   e.preventDefault();\r\n  //   //if button enabled with js hack\r\n  //   const v1 = USER_REGEX.test(user);\r\n  //   const v2 = PWD_REGEX.test(pwd);\r\n  //   if(!v1 || !v2 || !validMatch) {\r\n  //     setErrMsg(\"Invalid Entry\");\r\n  //     return;\r\n  //   }\r\n  //   console.log(user, pwd);\r\n  //   setSuccess(true);\r\n  // }\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault();\r\n  \r\n  //   // Validate user and password using regex\r\n  //   const v1 = USER_REGEX.test(user);\r\n  //   const v2 = PWD_REGEX.test(pwd);\r\n  //   if (!v1 || !v2 || !validMatch) {\r\n  //     setErrMsg(\"Invalid Entry\");\r\n  //     return;\r\n  //   }\r\n  \r\n  //   // Store user data in IndexedDB\r\n  //   await registerUser(user, pwd);\r\n  //   console.log(\"User registered:\", user);\r\n  \r\n  //   // Clear input fields and show success message\r\n  //   setUser('');\r\n  //   setPwd('');\r\n  //   setMatchPwd('');\r\n  //   setSuccess(true);\r\n  // };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Form submitted');\r\n    \r\n    // Validate inputs\r\n    const isUsernameValid = USER_REGEX.test(user);\r\n    const isPasswordValid = PWD_REGEX.test(pwd);\r\n    console.log(\"Username valid:\", isUsernameValid);\r\n    console.log(\"Password valid:\", isPasswordValid);\r\n    console.log(\"Password match valid:\", validMatch);\r\n  \r\n    if (!isUsernameValid || !isPasswordValid || !validMatch) {\r\n      setErrMsg(\"Invalid Entry\");\r\n      console.log(\"Form validation failed\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      console.log(\"Calling registerUser...\");\r\n      await registerUser(user, pwd);\r\n      console.log(\"User registered successfully!\");\r\n  \r\n      setUser('');\r\n      setPwd('');\r\n      setMatchPwd('');\r\n      setSuccess(true);\r\n  \r\n      // Redirect to the home page after successful registration\r\n      navigate('/home');\r\n    } catch (error) {\r\n      console.error(\"Error during registration:\", error);\r\n      if (error.name === \"ConstraintError\") {\r\n        setErrMsg(\"Username already exists. Please choose a different one.\");\r\n      } else {\r\n        setErrMsg(\"An error occurred during registration. Please try again later.\");\r\n      }\r\n    }\r\n  };\r\n  \r\n  // // Registration function to store user data in IndexedDB\r\n  // async function registerUser(username, password) {\r\n  //   const dbPromise = openDB.open('myDatabase', 1, (upgradeDb) => {\r\n  //     const objectStore = upgradeDb.createObjectStore('users', { keyPath: 'username' });\r\n  //     objectStore.createIndex('username', 'username', { unique: true });\r\n  //   });\r\n  \r\n  //   await dbPromise.then(db => {\r\n  //     const tx = db.transaction('users', 'readwrite');\r\n  //     const store = tx.objectStore('users');\r\n  //     store.add({ username, password });\r\n  //     return tx.complete;\r\n  //   });\r\n  // }\r\n  // Registration function to store user data in IndexedDB\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n    {success ? (\r\n      <section><h1>Success!</h1>\r\n        <p>\r\n          <a href=\"http://localhost:3000/home\">Sign In</a>\r\n        </p>\r\n      </section>\r\n    ) : (\r\n    <section>\r\n      <p ref= {errRef} className= {errMsg ? \"errmsg\": \"offscreen\"} aria-live='assertive'>{errMsg}</p>\r\n\r\n      <h1>Register</h1>      \r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor='username'>Username: \r\n          <span className={validName ? \"valid\" : \"hide\"}>\r\n            <icon aria-label=\"Checkmark icon\">✔</icon>\r\n          </span>\r\n          <span className={validName ||  !user ? \"hide\" : \"invalid\"}>\r\n            <icon aria-label=\"Invalid icon\">×</icon>\r\n          </span>\r\n          \r\n        </label>\r\n        <input \r\n          type='text'\r\n          id='username'\r\n          ref={userRef}\r\n          autoComplete='off'\r\n          onChange={(e) => setUser(e.target.value)}\r\n          required\r\n          aria-invalid={validName ? \"false\" : \"true\"}\r\n          aria-describedby='uidnote'\r\n          onFocus={() => setUserFocus(true)}\r\n          onBlur={() => setUserFocus(false)}\r\n        />\r\n        <p id=\"uidnote\" className={userFocus && user && !validName ? \"instructions\" : \"offscreen\"}>\r\n          <icon>Icon here </icon> <br/>\r\n          4 to 24 characters. <br/>\r\n          Must begin with a letter. <br />\r\n          Letters, numbers, underscores, hyphesn allowed.\r\n        </p>\r\n\r\n\r\n        <label htmlFor='password'>\r\n          Password:\r\n          <span className={validPwd ? \"valid\" : \"hide\" }>\r\n            <icon aria-label=\"Checkmark icon\">✔</icon>\r\n          </span>\r\n          <span className={validPwd ||  !pwd? \"hide\" : \"invalid\"}>\r\n            <icon ria-label=\"Invalid icon\">×</icon>\r\n          </span>\r\n        </label>\r\n        <input\r\n          type='password'\r\n          id='password'\r\n          onChange = {(e) => setPwd(e.target.value)}\r\n          required\r\n          aria-invalid={validPwd ? \"false\" : \"true\"}\r\n          aria-describedby='pwdnote'\r\n          onFocus={() => setPwdFocus(true)}\r\n          onBlur={() => setPwdFocus(false)}        \r\n        />\r\n        <p id='pwdnote' className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n          <icon>Icon here </icon> <br/>\r\n            8 to 24 characters. <br/>\r\n            Must include uppercase and lowercase letters, a number and a special character. <br />\r\n            Allowed special characters: <span  aria-label='exclamation mark'>!</span><span aria-label='at symbol'>@</span><span aria-label='hashtag'>#</span><span aria-label='dollar sign'>$</span><span aria-label='percent'>%</span>\r\n        </p>\r\n\r\n\r\n        <label htmlFor='confirm_pwd'>\r\n          Confirm Password: \r\n          <span className={validMatch && matchPwd ? \"valid\": \"hide\"}>\r\n            <icon aria-label=\"Checkmark icon\">✔</icon>\r\n          </span>\r\n          <span className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}>\r\n            <icon ria-label=\"Invalid icon\">×</icon>\r\n          </span>\r\n        </label>\r\n        <input \r\n          type='password'\r\n          id='confirm_pwd'\r\n          onChange={(e) => setMatchPwd(e.target.value)}\r\n          required\r\n          aria-invalid={validMatch ? \"false\" : \"true\"}\r\n          aria-describedby='confirmnote'\r\n          onFocus={() => setMatchFocus(true)}\r\n          onBlur={() => setMatchFocus(false)} \r\n          />\r\n        <p id='confirmnote' className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n            <icon>icone here</icon>\r\n            Must match the first password input field. \r\n        </p>\r\n\r\n        <button disabled={!validName || !validPwd || ! validMatch ? true : false}>\r\n          Sign Up\r\n        </button>\r\n        \r\n\r\n      </form>\r\n      <p>\r\n        Already registered? <br/>\r\n        <span className='line'>\r\n          {/*put  router link here */}\r\n          <a href='http://localhost:3000/'>Sign in</a>\r\n        </span>\r\n      </p>\r\n\r\n\r\n\r\n\r\n\r\n    </section>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Register"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}